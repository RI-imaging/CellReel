name: Checks

on:
  push:
  pull_request:
  schedule:
  - cron: "0 0 1 * *"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8']
        os: [ubuntu-latest, windows-latest]
    env:
      # Display must be available globally for linux to know where xvfb is
      DISPLAY: :0

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup xvfb (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Install fftw3 libs (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y libfftw3-dev libfftw3-3
    - name: Install Python dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        # https://github.com/pyFFTW/pyFFTW/issues/252
        pip install numpy cython
        python -m pip install coverage flake8 pytest pytest-qt
        # install dependencies
        pip install -e .
        # show installed packages
        pip freeze
    - name: Start application and print version
      env:
         QT_DEBUG_PLUGINS: 1
      run: |
         python -m cellreel --version
    - name: Test with pytest
      run: |
         coverage run --source=cellreel -m pytest tests
    - name: Lint with flake8
      run: |
        flake8 .
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
#    - name: Create app and check if it runs (macOS)
#      if: runner.os == 'macOS'
#      working-directory: ./build-recipes
#      run: |
#        bash ./macos_build_app.sh cellreel $(python -m cellreel --version)
